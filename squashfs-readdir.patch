diff -Nur squashfs1.2.org/squashfs-tools/mksquashfs.c squashfs1.2/squashfs-tools/mksquashfs.c
--- squashfs1.2.org/squashfs-tools/mksquashfs.c	2003-03-13 03:54:36.000000000 +0000
+++ squashfs1.2/squashfs-tools/mksquashfs.c	2003-07-12 23:40:17.000000000 +0000
@@ -248,7 +248,7 @@
 {
 	off_t off = byte;
 
-	if(lseek64(fd, off, SEEK_SET) == -1) {
+	if(lseek(fd, off, SEEK_SET) == -1) {
 		perror("Lseek on destination failed");
 		exit(0);
 	}
@@ -267,7 +267,7 @@
 	if(off + bytes > ((long long)1<<32) - 1 )
 		BAD_ERROR("Filesystem greater than maximum size 2^32 - 1\n");
 
-	if(lseek64(fd, off, SEEK_SET) == -1) {
+	if(lseek(fd, off, SEEK_SET) == -1) {
 		perror("Lseek on destination failed");
 		exit(0);
 	}
diff -Nur squashfs1.2.org/squashfs-tools/read_fs.c squashfs1.2/squashfs-tools/read_fs.c
--- squashfs1.2.org/squashfs-tools/read_fs.c	2003-03-13 02:18:55.000000000 +0000
+++ squashfs1.2/squashfs-tools/read_fs.c	2003-07-12 23:37:50.000000000 +0000
@@ -264,7 +264,7 @@
 }
 
 
-unsigned char *readdir(int fd, int root_entries, int start, int offset, int size, squashfs_super_block *sBlk,
+unsigned char *squashfs_readdir(int fd, int root_entries, int start, int offset, int size, squashfs_super_block *sBlk,
 		void (push_directory_entry)(char *, squashfs_inode, int))
 {
 	squashfs_dir_header dirh;
@@ -277,7 +277,7 @@
 	if((directory_table = malloc((size + SQUASHFS_METADATA_SIZE * 2 - 1) & ~(SQUASHFS_METADATA_SIZE - 1))) == NULL)
 		return NULL;
 	while(bytes < size) {
-		TRACE("readdir: reading block 0x%x, bytes read so far %d\n", start, bytes);
+		TRACE("squashfs_readdir: reading block 0x%x, bytes read so far %d\n", start, bytes);
 		if((bytes += read_block(fd, &start, directory_table + bytes, sBlk)) == 0) {
 			free(directory_table);
 			return NULL;
@@ -297,7 +297,7 @@
 			memcpy((void *)&dirh, directory_table + bytes, sizeof(dirh));
 
 		dir_count = dirh.count + 1;
-		TRACE("readdir: Read directory header @ byte position 0x%x, 0x%x directory entries\n", bytes, dir_count);
+		TRACE("squashfs_readdir: Read directory header @ byte position 0x%x, 0x%x directory entries\n", bytes, dir_count);
 		bytes += sizeof(dirh);
 
 		while(dir_count--) {
@@ -311,7 +311,7 @@
 
 			memcpy((void *)dire->name, directory_table + bytes, dire->size + 1);
 			dire->name[dire->size + 1] = '\0';
-			TRACE("readdir: pushing directory entry %s, inode %x:%x, type 0x%x\n", dire->name, dirh.start_block, dire->offset, dire->type);
+			TRACE("squashfs_readdir: pushing directory entry %s, inode %x:%x, type 0x%x\n", dire->name, dirh.start_block, dire->offset, dire->type);
 			push_directory_entry(dire->name, SQUASHFS_MKINODE(dirh.start_block, dire->offset), dire->type);
 			bytes += dire->size + 1;
 		}
@@ -350,7 +350,7 @@
 	printf("Read existing filesystem, %d inodes scanned\n", files);
 
 	if(((inode.inode_type - 1) % SQUASHFS_TYPES + 1) == SQUASHFS_DIR_TYPE) {
-		if((directory_table = readdir(fd, !((int) root_name), sBlk->directory_table_start + inode.start_block,
+		if((directory_table = squashfs_readdir(fd, !((int) root_name), sBlk->directory_table_start + inode.start_block,
 						inode.offset, inode.file_size, sBlk, push_directory_entry)) == NULL) {
 			ERROR("read_filesystem: Could not read root directory\n");
 			goto error;
